/*
 * 
 * All the help and tools you need to grow online: Websites, Domains, Digital and Social Marketing - plus GoDaddy Guides with you every step of the way.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * MaintenanceSystem
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class MaintenanceSystem {
  /**
   * Gets or Sets impact
   */
  @JsonAdapter(ImpactEnum.Adapter.class)
 public enum ImpactEnum {
    DELAYED("DELAYED"),
    
    DOWN("DOWN"),
    
    NON_AUTHORITATIVE("NON_AUTHORITATIVE"),
    
    PARTIAL("PARTIAL");

    private String value;

    ImpactEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ImpactEnum fromValue(String value) {
      for (ImpactEnum b : ImpactEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ImpactEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ImpactEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ImpactEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ImpactEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_IMPACT = "impact";
  @SerializedName(SERIALIZED_NAME_IMPACT)
  private List<ImpactEnum> impact = new ArrayList<>();

  /**
   * The name of the system affected by the maintenance&lt;br/&gt;&lt;ul&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;DOMAIN_CHECKS&lt;/strong&gt; - Refers to domain availability checks.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;DOMAIN_MANAGEMENT&lt;/strong&gt; - Refers to domain management options including various update options on the domain, contacts, records, etc.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;DOMAIN_REGISTRATION&lt;/strong&gt; - Refers to domain registrations, renewals, transfers.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;DOMAIN_REGISTRATION_DATA&lt;/strong&gt; - Refers to RDAP and WHOIS Service queries for domains.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;DOMAIN_RESOLUTION&lt;/strong&gt; - Refers to DNS resolution for domains.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;RESELLER_ADMIN_PORTAL&lt;/strong&gt; - Refers to Admin portals to manage the reseller account and settings.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;RESELLER_STOREFRONT&lt;/strong&gt; - Refers to the Reseller Storefront features (Standard and Custom).&lt;/li&gt;&lt;/ul&gt;
   */
  @JsonAdapter(NameEnum.Adapter.class)
 public enum NameEnum {
    DOMAIN_CHECKS("DOMAIN_CHECKS"),
    
    DOMAIN_MANAGEMENT("DOMAIN_MANAGEMENT"),
    
    DOMAIN_REGISTRATION("DOMAIN_REGISTRATION"),
    
    DOMAIN_REGISTRATION_DATA("DOMAIN_REGISTRATION_DATA"),
    
    DOMAIN_RESOLUTION("DOMAIN_RESOLUTION"),
    
    RESELLER_ADMIN_PORTAL("RESELLER_ADMIN_PORTAL"),
    
    RESELLER_STOREFRONT("RESELLER_STOREFRONT");

    private String value;

    NameEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static NameEnum fromValue(String value) {
      for (NameEnum b : NameEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<NameEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NameEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NameEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return NameEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private NameEnum name;

  public MaintenanceSystem() {
  }

  public MaintenanceSystem impact(List<ImpactEnum> impact) {
    
    
    
    
    this.impact = impact;
    return this;
  }

  public MaintenanceSystem addImpactItem(ImpactEnum impactItem) {
    this.impact.add(impactItem);
    return this;
  }

   /**
   * The impact of the maintenance to the system&lt;br/&gt;&lt;ul&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;DELAYED&lt;/strong&gt; - This response generally applies to systems where the request is queued up and processed once the system is back online.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;DOWN&lt;/strong&gt; - The system will be entirely offline; errors are expected.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;NON_AUTHORITATIVE&lt;/strong&gt; - This response generally applies to DOMAIN_CHECKS and DOMAIN_MANAGEMENT &#x60;system&#x60; values where a cached answer will be supplied.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;PARTIAL&lt;/strong&gt; - The system will experience partial feature outages; some errors are expected.&lt;/li&gt;&lt;/ul&gt;
   * @return impact
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The impact of the maintenance to the system<br/><ul><li><strong style='margin-left: 12px;'>DELAYED</strong> - This response generally applies to systems where the request is queued up and processed once the system is back online.</li><li><strong style='margin-left: 12px;'>DOWN</strong> - The system will be entirely offline; errors are expected.</li><li><strong style='margin-left: 12px;'>NON_AUTHORITATIVE</strong> - This response generally applies to DOMAIN_CHECKS and DOMAIN_MANAGEMENT `system` values where a cached answer will be supplied.</li><li><strong style='margin-left: 12px;'>PARTIAL</strong> - The system will experience partial feature outages; some errors are expected.</li></ul>")

  public List<ImpactEnum> getImpact() {
    return impact;
  }


  public void setImpact(List<ImpactEnum> impact) {
    
    
    
    this.impact = impact;
  }


  public MaintenanceSystem name(NameEnum name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The name of the system affected by the maintenance&lt;br/&gt;&lt;ul&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;DOMAIN_CHECKS&lt;/strong&gt; - Refers to domain availability checks.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;DOMAIN_MANAGEMENT&lt;/strong&gt; - Refers to domain management options including various update options on the domain, contacts, records, etc.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;DOMAIN_REGISTRATION&lt;/strong&gt; - Refers to domain registrations, renewals, transfers.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;DOMAIN_REGISTRATION_DATA&lt;/strong&gt; - Refers to RDAP and WHOIS Service queries for domains.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;DOMAIN_RESOLUTION&lt;/strong&gt; - Refers to DNS resolution for domains.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;RESELLER_ADMIN_PORTAL&lt;/strong&gt; - Refers to Admin portals to manage the reseller account and settings.&lt;/li&gt;&lt;li&gt;&lt;strong style&#x3D;&#39;margin-left: 12px;&#39;&gt;RESELLER_STOREFRONT&lt;/strong&gt; - Refers to the Reseller Storefront features (Standard and Custom).&lt;/li&gt;&lt;/ul&gt;
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the system affected by the maintenance<br/><ul><li><strong style='margin-left: 12px;'>DOMAIN_CHECKS</strong> - Refers to domain availability checks.</li><li><strong style='margin-left: 12px;'>DOMAIN_MANAGEMENT</strong> - Refers to domain management options including various update options on the domain, contacts, records, etc.</li><li><strong style='margin-left: 12px;'>DOMAIN_REGISTRATION</strong> - Refers to domain registrations, renewals, transfers.</li><li><strong style='margin-left: 12px;'>DOMAIN_REGISTRATION_DATA</strong> - Refers to RDAP and WHOIS Service queries for domains.</li><li><strong style='margin-left: 12px;'>DOMAIN_RESOLUTION</strong> - Refers to DNS resolution for domains.</li><li><strong style='margin-left: 12px;'>RESELLER_ADMIN_PORTAL</strong> - Refers to Admin portals to manage the reseller account and settings.</li><li><strong style='margin-left: 12px;'>RESELLER_STOREFRONT</strong> - Refers to the Reseller Storefront features (Standard and Custom).</li></ul>")

  public NameEnum getName() {
    return name;
  }


  public void setName(NameEnum name) {
    
    
    
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MaintenanceSystem maintenanceSystem = (MaintenanceSystem) o;
    return Objects.equals(this.impact, maintenanceSystem.impact) &&
        Objects.equals(this.name, maintenanceSystem.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(impact, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MaintenanceSystem {\n");
    sb.append("    impact: ").append(toIndentedString(impact)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("impact");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("impact");
    openapiRequiredFields.add("name");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to MaintenanceSystem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!MaintenanceSystem.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MaintenanceSystem is not found in the empty JSON string", MaintenanceSystem.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!MaintenanceSystem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MaintenanceSystem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MaintenanceSystem.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the required json array is present
      if (jsonObj.get("impact") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("impact").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `impact` to be an array in the JSON string but got `%s`", jsonObj.get("impact").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MaintenanceSystem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MaintenanceSystem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MaintenanceSystem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MaintenanceSystem.class));

       return (TypeAdapter<T>) new TypeAdapter<MaintenanceSystem>() {
           @Override
           public void write(JsonWriter out, MaintenanceSystem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MaintenanceSystem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MaintenanceSystem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MaintenanceSystem
  * @throws IOException if the JSON string is invalid with respect to MaintenanceSystem
  */
  public static MaintenanceSystem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MaintenanceSystem.class);
  }

 /**
  * Convert an instance of MaintenanceSystem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

