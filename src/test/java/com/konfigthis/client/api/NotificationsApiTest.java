/*
 * 
 * All the help and tools you need to grow online: Websites, Domains, Digital and Social Marketing - plus GoDaddy Guides with you every step of the way.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.DomainNotification;
import com.konfigthis.client.model.JsonSchema;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationsApi
 */
@Disabled
public class NotificationsApiTest {

    private static NotificationsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new NotificationsApi(apiClient);
    }

    /**
     * Acknowledge a domain notification
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void acknowledgeDomainNotificationTest() throws ApiException {
        String customerId = null;
        String notificationId = null;
        String xRequestId = null;
        api.acknowledgeDomainNotification(customerId, notificationId)
                .xRequestId(xRequestId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve the next domain notification
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNextDomainTest() throws ApiException {
        String customerId = null;
        String xRequestId = null;
        DomainNotification response = api.getNextDomain(customerId)
                .xRequestId(xRequestId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve the schema for the notification data for the specified notification type
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSchemaTest() throws ApiException {
        String customerId = null;
        String type = null;
        String xRequestId = null;
        JsonSchema response = api.getSchema(customerId, type)
                .xRequestId(xRequestId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a list of notification types that are opted in
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listOptedInTypesTest() throws ApiException {
        String customerId = null;
        String xRequestId = null;
        List<DomainNotification> response = api.listOptedInTypes(customerId)
                .xRequestId(xRequestId)
                .execute();
        // TODO: test validations
    }

    /**
     * Opt in to recieve notifications for the submitted notification types
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void optInNotificationsTest() throws ApiException {
        String customerId = null;
        List<String> types = null;
        String xRequestId = null;
        api.optInNotifications(customerId, types)
                .xRequestId(xRequestId)
                .execute();
        // TODO: test validations
    }

}
